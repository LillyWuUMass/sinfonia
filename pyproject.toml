# SPDX-FileCopyrightText: 2021-2022 Carnegie Mellon University
# SPDX-License-Identifier: 0BSD

[tool.poetry]
name = "sinfonia"
version = "0.4.10.post.dev0"
description = "Tier 1 and 2 components of the Sinfonia system"
authors = [
    "Carnegie Mellon University <satya+group@cs.cmu.edu>",
    "Jan Harkes <jaharkes@cs.cmu.edu>",
]
license = "MIT"
packages = [
    { include = "sinfonia", from = "src" },
    { include = "tests", format = "sdist" },
]

[tool.poetry.dependencies]
# common dependencies
python = "^3.7"
typer = {extras = ["all"], version = "^0.6.1"}
yarl = "^1.7.2"

# tier 1,2 common dependencies
attrs = ">=21.3.0"
connexion = {version = "^2.9.0", extras = ["swagger-ui"]}
Flask-APScheduler = "^1.12.3"
jsonschema = {version = ">=4.4.0, <4.6.0", extras = ["format_nongpl"]}
pendulum = "^2.1.2"
requests = "^2.26.0"

# tier 1 specific dependencies
Flask-Executor = "^0.10.0"
geopy = "^2.2.0"
importlib-metadata = "^4.12.0"
maxminddb = "^2.2.0"
maxminddb-geolite2 = "^2018.703"
openapi-spec-validator = "<0.5.0"
prance = {version = "^0.21.8", extras = ["osv"]}

# tier 2 specific dependencies
plumbum = "^1.7.2"
randomname = "^0.1.5"
wireguard-tools = "^0.4.0"
zeroconf = "^0.38.7"
py-rapl = {git = "https://github.com/wkatsak/py-rapl.git"}
pydantic = "2.5.0"
dependency-injector = "^4.41.0"
python-dotenv = {version = "^1.0.1", python = "3.10"}
pydantic-settings = {version = "^2.1.0", python = "3.10"}

[tool.poetry.group.dev.dependencies]
black = "^22.10.0"
jsonpatch = "^1.32"
poethepoet = "^0.16.5"
pre-commit = "^2.16.0"
tbump = "~6.9.0"

[tool.poetry.group.test.dependencies]
mypy = "^0.961"
pytest = "^6.2.5"
pytest-mock = "^3.6.1"
requests-mock = "^1.9.3"
types-PyYAML = "^6.0.8"
types-requests = "^2.27.30"
types-jsonschema = {version = ">=4.4.0, <4.6.0"}
types-python-dateutil = "^2.8.17"

[tool.poetry.group.admin.dependencies]
# dependencies for sinfonia.s3_upload
boto3 = "^1.26.21"
tqdm = "^4.64.1"

[tool.poetry.scripts]
sinfonia-tier1 = "sinfonia.app_tier1:cli"
sinfonia-tier2 = "sinfonia.app_tier2:cli"
tier1-shell = "tier_shell.tier1:cli"
tier2-shell = "tier_shell.tier2:cli"
tier-shell = "tier_shell.app:app"

[tool.poetry.plugins."sinfonia.tier1_matchers"]
network = "sinfonia.matchers:match_by_network"
location = "sinfonia.matchers:match_by_location"
random = "sinfonia.matchers:match_random"
carbon-intensity = "sinfonia.matchers:match_carbon_intensity"

[tool.black]
target-version = ["py37"]

[tool.isort]
py_version = 37
profile = "black"

[tool.mypy]
check_untyped_defs = true
files = ["src", "tests"]

[[tool.mypy.overrides]]
# ignore missing type hints errors from untyped modules
module = [
    "boto3.*",
    "connexion.*",
    "geolite2.*",
    "geopy.*",
    "flask_apscheduler.*",
    "flask_executor.*",
    "plumbum.*",
    "prance.*",
    "randomname.*",
    "tqdm.*",
]
ignore_missing_imports = true

[tool.poe]
include = "tasks.toml"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
