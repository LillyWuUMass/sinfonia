# SPDX-FileCopyrightText: 2021-2022 Carnegie Mellon University
# SPDX-License-Identifier: MIT
#
# ansible playbook to bootstrap kubernetes onto a new Ubuntu 20.04 server
# and deploy sinfonia-tier2
#
# run as: ansible-playbook deploy.yml -i $host,
#
# Optionally set the SINFONIA_TIER1_URL environment variable if you
# want to register with a sinfonia-tier1 instance.
#  i.e. SINFONIA_TIER1_URL=https://cloudlet.mydomain.org
---
- hosts: localhost
  become: false
  gather_facts: false
  no_log: false

  tasks:
  - name: make sure local directory for deployment files exists
    ansible.builtin.file:
      path: "files"
      state: directory

  - name: update local copy of deployment files
    ansible.builtin.command:
      cmd: poetry run poe update-deployment-files
      creates: "files/kilo-wg-exporter.yaml"

- hosts: tier2hosts
  remote_user: khainguyen
  become_user: root
  become: true
  gather_facts: true

  # Configurations for Sinfonia deployment
  vars:
    sinfonia_tier1_url: "http://192.168.245.26:5000"
    sinfonia_tier2_url: "{{ hostvars[inventory_hostname].sinfonia_tier2_url }}"
    sinfonia_tier2_latitude: "{{ hostvars[inventory_hostname].sinfonia_tier2_latitude }}"
    sinfonia_tier2_longitude: "{{ hostvars[inventory_hostname].sinfonia_tier2_longitude }}"
    sinfonia_tier2_zone: "{{ hostvars[inventory_hostname].sinfonia_tier2_zone }}"
    sinfonia_tier3_latitude: "30.209041"
    sinfonia_tier3_longitude: "-81.592600"
    sinfonia_kubeconfig: ""
    sinfonia_kubecontext: ""
    sinfonia_prometheus: "http://kube-prometheus-stack-prometheus.monitoring.svc:9090"
    sinfonia_recipes: "/nfs/obelix/users1/khainguyen/sinfonia/RECIPES"
    experiment_obelix_node_name: "{{ inventory_hostname }}"
    experiment_transition_latency_ms: "{{ hostvars[inventory_hostname].experiment_transition_latency_ms }}"
    experiment_power_measure_method: "rapl"
    enable_ufw: false
    override_resolv_conf: true


  environment:
    SINFONIA_TIER2_LATITUDE: "{{ sinfonia_tier2_latitude }}"
    SINFONIA_TIER2_LONGITUDE: "{{ sinfonia_tier2_longitude }}"
    SINFONIA_TIER3_LATITUDE: "{{ sinfonia_tier3_latitude }}"
    SINFONIA_TIER3_LONGITUDE: "{{ sinfonia_tier3_longitude }}"
    # K8S_AUTH_KUBECONFIG: /etc/rancher/k3s/k3s.yaml

  tasks:
  - import_tasks: tasks/ubuntu.yml
  - import_tasks: tasks/k3s.yml
  - import_tasks: tasks/kube-prometheus-stack.yml
  - import_tasks: tasks/kilo.yml
  # - import_tasks: tasks/latency.yml
  - import_tasks: tasks/carbon.yml
  # - import_tasks: tasks/nvidia_gpu_operator.yml
  # - import_tasks: tasks/kubevirt.yml

  #- name: configure storage...

  - name: deploy sinfonia-tier2
    kubernetes.core.k8s:
      kubeconfig: /etc/rancher/k3s/k3s.yaml
      state: present
      resource_definition:
        apiVersion: helm.cattle.io/v1
        kind: HelmChart
        metadata:
          name: sinfonia-tier2
          namespace: kube-system
        spec:
          chart: sinfonia-tier2
          repo: https://k2nt.github.io/projects/sinfonia/helm
          targetNamespace: default
          valuesContent: |-
            sinfoniaTier1Url: "{{ sinfonia_tier1_url }}"
            sinfoniaTier2Url: "{{ sinfonia_tier2_url }}"
            sinfoniaTier2Latitude: "{{ sinfonia_tier2_latitude }}"
            sinfoniaTier2Longitude: "{{ sinfonia_tier2_longitude }}"
            sinfoniaTier2Zone: "{{ sinfonia_tier2_zone }}"
            sinfoniaTier3Latitude: "{{ sinfonia_tier3_latitude }}"
            sinfoniaTier3Longitude: "{{ sinfonia_tier3_longitude }}"
            sinfoniaKubeConfig: "{{ sinfonia_kubeconfig }}"
            sinfoniaKubeContext: "{{ sinfonia_kubecontext }}"
            sinfoniaPrometheus: "{{ sinfonia_prometheus }}"
            sinfoniaRecipes: "{{ sinfonia_recipes }}"
            experimentObelixNodeName: "{{ experiment_obelix_node_name }}"
            experimentPowerMeasureMethod: "{{ experiment_power_measure_method }}"
            ingress:
              className: traefik
            image:
              repository: k2nt/sinfonia-tier2
              imagePullPolicy: Always
              tag: dev.18
            securityContext:
              privileged: true
